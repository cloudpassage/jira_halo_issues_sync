sudo: required
language: python
services:
- docker
before_script:
- docker run -it --rm -e "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" -e
  "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" -e "AWS_REGION=${AWS_REGION}" -e
  "ENVIRONMENT_NAME=${ENVIRONMENT_NAME}" ${TESTING_IMAGE_NAME} deprovision && docker
  run -it --rm -e "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" -e "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}"
  -e "ENVIRONMENT_NAME=${ENVIRONMENT_NAME}" -e "AMI_ID=${AMI_ID}" -e "AWS_SSH_KEY_NAME=${AWS_SSH_KEY_NAME}"
  -e "AWS_REGION=${AWS_REGION}" -e "HALO_AGENT_KEY=${HALO_AGENT_KEY}" -e "SERVER_COUNT=${SERVER_COUNT}"
  -e "CLI_CMD=${CLI_CMD}" ${TESTING_IMAGE_NAME} provision
- pip install aws-sam-cli
script:
- docker build -t testme .
- docker run -it --rm
  -e HALO_API_KEY=${HALO_API_KEY}
  -e HALO_API_SECRET_KEY=${HALO_API_SECRET_KEY}
  -e JIRA_API_URL=${JIRA_API_URL}
  -e JIRA_API_USER=${JIRA_API_USER}
  -e JIRA_API_TOKEN=${JIRA_API_TOKEN}
  -e JIRA_ISSUE_ID_FIELD=${JIRA_ISSUE_ID_FIELD}
  -e JIRA_PROJECT_KEY=${JIRA_PROJECT_KEY}
  -e ISSUE_CLOSE_TRANSITION=${ISSUE_CLOSE_TRANSITION}
  -e ISSUE_REOPEN_TRANSITION=${ISSUE_REOPEN_TRANSITION}
  -e JIRA_ISSUE_TYPE=${JIRA_ISSUE_TYPE}
  testme /src/jira_halo_issues_sync/run_tests.sh
- docker run -it --rm
  -e HALO_API_KEY=${HALO_API_KEY}
  -e HALO_API_SECRET_KEY=${HALO_API_SECRET_KEY}
  -e JIRA_API_URL=${JIRA_API_URL}
  -e JIRA_API_USER=${JIRA_API_USER}
  -e JIRA_API_TOKEN=${JIRA_API_TOKEN}
  -e JIRA_ISSUE_ID_FIELD=${JIRA_ISSUE_ID_FIELD}
  -e JIRA_PROJECT_KEY=${JIRA_PROJECT_KEY}
  -e ISSUE_CLOSE_TRANSITION=${ISSUE_CLOSE_TRANSITION}
  -e ISSUE_REOPEN_TRANSITION=${ISSUE_REOPEN_TRANSITION}
  -e JIRA_ISSUE_TYPE=${JIRA_ISSUE_TYPE}
  -e CRITICAL_ONLY=True
  -e ISSUE_STATUS_CLOSED=closed
  -e DEBUG=True
  -e TIME_RANGE=60
  testme
- docker run -it --rm
  -v ${PWD}/JiraHaloIssuesSync/:/var/delivery/
  --entrypoint=/bin/sh
  testme
  /src/jira_halo_issues_sync/generate_lambda.sh
- cp JiraHaloIssuesSync/JiraHaloIssuesSyncFunction.zip ./
- cat ./envvars.template | envsubst > envvars.json
- sam local invoke
  --debug
  --region=us-west-2
  --no-event
  --env-vars ./envvars.json
  --parameter-overrides='ParameterKey=CodeUriParameter,ParameterValue=JiraHaloIssuesSyncFunction.zip'
  JiraHaloIssuesSyncFunction
after_success:
- docker run -it --rm -e "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" -e
  "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" -e "AWS_REGION=${AWS_REGION}" -e
  "ENVIRONMENT_NAME=${ENVIRONMENT_NAME}" ${TESTING_IMAGE_NAME} deprovision
- python ./cleanup.py
after_failure: docker run -it --rm -e "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" -e
  "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" -e "AWS_REGION=${AWS_REGION}" -e
  "ENVIRONMENT_NAME=${ENVIRONMENT_NAME}" ${TESTING_IMAGE_NAME} deprovision
env:
  global:
  - AMI_ID=ami-28e07e50
  - CLI_CMD=IyEvYmluL3NoCgp5dW0gaW5zdGFsbCBodHRwZAo=
  - TESTING_IMAGE_NAME=docker.io/halotools/halo-test-environment:v0.1
  - AWS_SSH_KEY_NAME=ci_cloudpassage_cloudpassage-halo-python-sdk
  - AWS_REGION=us-west-2
  - SERVER_COUNT=5
  - HALO_API_HOSTNAME=api.cloudpassage.com
  - HALO_API_PORT=443
  - ENVIRONMENT_NAME=JIRASYNC
  - JIRA_PROJECT_KEY=HJ1
  - JIRA_ISSUE_ID_FIELD=environment
  - JIRA_ISSUE_TYPE=Bug
  - ISSUE_CLOSE_TRANSITION=close
  - ISSUE_REOPEN_TRANSITION=reopen
  - secure: lyR6KRiYOXAt0Jmg/HZVDf8D3s87gqCk+3u6KiQR8mGzN0KPgLBM5EVnHKXOunz01+sWGI8UV0tXgDRXxvb+o56JU7RiBT9GeA7Nc7acOBkTcsYywk8MPBCZYNFnK6Ys0T0Q3+oLYNwHMglu+01b4yzv+PKi1y4aeqGUud8VUZmVouKl6XMuhIUC3VuWvLRA9oQmjs3lcsBDJmv7h7X09LZ+3W7Dj1CovD2aUdgLeJKky49B9K2pAOnKviFAeSATBV1NwE+GrwuSA0zEaPMJHl1L1gVZo/tweTufFmBAZS4MmOhgSd0iAROrD31ZT7H2SEihfRUHV2OPxG4UGDFvYEl/qCTSPudnW7NeEt40jZXhyK21OSw5W3N2TNPnu+Xy7sVYV+nk3tgj51rOakoVfpvRcaIErPfvgq1CsQ6JUqIE1pt51jkWs1Mqt2Eqh9qrJaOo3gdQ4dQ3xvNY2W1wbgBlO5w/pNuUORI301F5D1jrchjUbYySDSN7vuoJoM7CnYVDcdekX630zs0bfxUWuNNgosvc8KKm69kYujyAI0i6TmpO5n5zAIWnydquhrzBBvHZJ9QFoWcSHkWTqjr+7QtWOSObXAplaURyhCbq7yrgcMvI5YxDmHbtygDf1Va0n/ZjxNGiF0gwbjrZOu5xUXvIRQnfYWTAbZnd8WhwT3Q=
  - secure: gYi0exrg0ftWbPwy96lC0XSYcI+0br072Z6rxoHCG2d9HJA0TpYZ+YhcMNtth2E/zTGwQdM0A+x8igRTZ7fEaq7e5zgMd/n0fCw6BYMS6MhfoxE/ADrtNgW2tdkuuVJx1ZBQIPEtgtzZRtxDVYzaPgy0XeJHuFiq4LSoa4fyBNmNMM3p7M8i+uRrk/OFJuKHzkYvyu7BumQ4fPpD37CjhX4Vt52bC+XZxYdkNedwD3wlUAvgpNVEb9NfOy6fFZt/6d+3pr6sDXE6mJR51XpZ+t+2pE1fP0MWtJ4KZcGWWc3j8PLJaeN1m+L6OH+J79JDIPgu3Tu7JFu5Gv6rjzM6Am5//42yPw3gFdQ23JT7wSezH2IS6wS27hKwFGegeMQSB6fqBmbtTIoWyNT4q30DJW1249EAMjU+46IMGkw3Cnok9Pf6aXs0MWKy7oq5oqU9Dglr/dJYB1wNjvlQynxpST1Jy9m8atqL/HDlnXtZoVE5++px7/nS3kdPREFsKZO3cJctCTiqxO802A/jhZrvFwxk4tQtBLJGTP5X/iXoDpYWfV8C4ZCwohG2ABatxTFGhdfm8ttpNEiw+kf96bIxxKe6B5RNiYe6iza9nAoFNnpXY/zk9KJLFHPVc1QQYdkwKEdfAFMI16kcAc4SEQzWV70X9Mj2bMBMl/xJ3Ru4SKI=
  - secure: QQWslNxzkMAjrOVUAnrGP0G8XPx501auQQtuJpGPL8rAAUcarlanZur1uKcLTYV1dfFnJ0//tHHKviHpYZtHmu5yhvY4ARcSyfiNemrjTIP2XLDBJGT7xI/dbIPLwWWD9/UZMisQ/Lfm30jmfbA+sJwsd8kex4d/46SWhpIUCxeMC+IJQZtwK2mxD2AH20LUufMXeC1ouVB0RhMAPth0fn8gJEcs6LhC/WsZ9JOOPARyBV+s0h4ZSb034iIDTCbnd19Bsle84HD4Vbqz7n8Hl8JRFjhP0JGUQ0CzwkJTgH+jSqZijBPQ0xP5Jl80CTB+LejQUtMU8aQhhHIY6+aFJ8OC8fJEhnNR8dIYF12rnoSJHJlGqUpF5pPlgNrq6DtcW8G/bAPTTsbuwpMx679jxC9kWY+0JW0V8HObrEDiI5IH2Rq2BdYKvLOBxOzu9IumVAM9GboADYHssH+dBZuFcU8o8F7mUE1oM7RknZzdmj6Wdy8FEb4aEjCjGGPf68YKPn8E3L5DaQI+rX7Wp95Gz7YtJo8McCSGnX6tV2E/dAqP2b3Jio7htphknql8bQJHJ3tDY0fEQzAsxK/TUbjifKXqqMFTpSxZa+7l2JS3htaBtVXUPc9WK3ExTlRZ5jwk3BrUPw1MtEcdYoE4PIf8nKOoy0nPaDHGyKWexZXbZpE=
  - secure: Yf4UvK0w+IgJU9KDHTUUMXLYuplCCX8tAIJt3kneq7c24CKOYTLg8oMvXTWQr/FtAKcSRDcES9UaXd0QE7e3WWXGUEeumfXdhW/Y7NndDfhXWLXA2kqZqMeoqugRc5MuV9gce8CrNFJhBMBwmsS13Sc5VV3VDY4ox739UZJ3S9p/KvuBh9BZ7uwsSnB8C8VUoS2tj7/2BBPqo95+eYuiBjx6Dw+Sazuv5P3gbRcX6eXqVowuzn60rZ7X/BmNlZlI55KKU+Q5mI30Iu1Cl9LGQuGrIyc0DvQF5JInW1Pu3O8zuCk5U6MVYDv+5HSplSAT9Wy15AHhvLerSwGvUr5zPTHV3dj+5FeovwhQ0pEznUzwZyVAPG1+jnqIw0GcW5WwAffnMyNb3bdy5cb5B6T615zSCVbIzlmj3+yJG1mynjfY7DZ7geGA9hN6RoFPlIJvOkXZa21UOEcXw/v0yOqe13XUl+lPGforgkf4h2oMYwhpJdA2XAb4+lI5ll6kPBtVUnnwGXt+V1yHZ/cUCiurVs6YY5uyZhltH/Eo1nMQv4gjTsf0/rCUqHo5UbJAUSZMgLu1oSq8lzLV1dcjXebrFz7JsrL0G61dUOkhnSv+mZr1vabepB2yyNTztCZCZf8oP+fhKv9gp47Mr+UITPJTFKtoo4EYKbVmNV/HkPlUH74=
  - secure: vQhBwoCrxqCqQFcSyCY6j6Wgd/KV0rKI4qkrbP7NZ+/Zez/6qFOD//IeQbPGm0O4oBp6cwcGpbYyl2TvD4bCCyykDBQhS05Fnja9dARV8fC05dcQ6Nea9WABWhwoGsoNwRVyVFTqR5QAQqf/dORA5FzBikdSC5RRKDk05BLHRC+Ks+b5glcU4AijQr2VQxZQcUZAnRHAL3s+NmTitwP2YKIPKhu8a8YRthT9k5X1O2KU953aL8INlAEwBSj/oXJPguCK885KCK37XOZ02Lb3+EEm+hrqXT4la0H+fwXQoMIixQ5TdKf9lYVbGxLd17gvX+UK9qHsBwMB+1Ue5YK95YF/Ufa0ywcM1KRAdfPF8zrfpcFT/ZSU4H3Ah+xCQhOroPxtLanTkX9zK4T9eSL29NABn1P4TFf/uX8KPL731OpQdIlQ6l+AcHCh1rGOskWc9PeiQJ0WVSACJx8ihdJZmgfCs5+Qk1AyjA51HDul9jeN9hTvHZL7ngpNVKVyilRQ0wj09IQt9aQqYlR0D5lQm3aYDSrzRVHmv06AJ6cOkXqeYx4Hc/CGul3CEQ95UBA//B5cRpfVnfLiSmT+gnuNcyAm7kTk0MOGX/1FRUGWugWXgpZwrYWMOxX4xoYDt/rZIGRQnQPlwHE1jzwqF7yS9RTqUT+TSjvkWS2HT88GbYA=
  - secure: hIeTYn+edACxU1KiwmVfjofmCECoBqUQrIPp1wRuuwF2c2jILUrizJd6ghFnGhPJGQOrSk43dzCR9EbM2fgsTKeo5A0ZvFQz+LOh5J4vF2OPupaFF2lToj5Qmus1s/C5GKHh6+Y7mmITECkz3z9p7d56/OD8ttbPHNCWRw+9i3dmUIkEfNcGLhnVHNdadpARfvGpORl03kzawxxcSr6F8WSKNWSenhvq9d7htfQU8gBRsqDfmTaVfcvoX/+JpG+ukX+7dR7jW0uLlE8OyrMPzW4RT7Dn87BnzGZa8lDNLP5BzVZ99ifwkbfqtPY+SZypFbkda6DAHCnA7sl7z0qd9lE7Mt+m17BCnxUlpRRL7aPnV8JtKrnlkRZqEwqISvM8teFAsdF0st9ARIgeeER3epbGFxl3f7mzkteabDf+MVU+QLGqr3v/KMK5AjUZA5YPKkRKgX5XB/mI0RzA1u2Bxh96i51KcWIPLX/nGSdTvGFm5FT6T9VMka5q/vpXUCmASXZKwDHMcx+Z3eqxh53aos8ZyklfOj/u/iESd9RjCFpyCVxYRGRllMLF/a2BXLXHlOnzVw53MpiE+3Z6hSWprCUA+LfL/5rVbI66W3aBAgcJlqeflldg/TDdjDBiH23/5wZtjcHaMadUdDDC2r+UR4mO2ohCLF20lT6YxPpJank=
  - secure: ZqS1hk5tKyOA2lZePY7U00eWmtD1J+RZLmQrxjm6S8XFRTRvE8cLIGWI++N8iTRI2/8zECmtWG3qJ5Mj/r1/iX3emawRILokl38ZO71hi3NnmdT835DRdea3DkMQndmQ4iE31RemegPo7P0+oVpHPhXKoVG5yfL/ptpINwipF0R+NNHb2h8lJCc14tsmFQxPP6r+L0Zb6NRwnGU8HkCOj0BEo9VLnuK+AcJO4V0BMdidhZ68mQQd+o5NRd4zIwQm3T9tk/kJ75Wz9A4kgosULeLEFXwp6ovLRAHMpfLLc+1PnMfFhJzm9pTbfpSw6y0+sew5jUthRGWlNneNqyLuAoW+q8ASFKLBfZW0sWSwF0aj/GRD57MstGbG3UxVRECI/mseCCIobCzUKY/BEOoK1Qv3cLXTcwpKySMBAKX4EzyStSPe9gUDfhOw/YTARNlPskMrFofA/DcaH0Bv5cFNx2t7zO+4Hk61eGS906R6/oPKvTJW4IIr6xpc8P4YxkVWzbYU170QEGzD3Hfp4ZIHLF8aiM0giS53HCKwAUpJgcCbqa7Llpha0zYqQoUa7sYUcmcdhiYDQoVBMAmdXHfKtJj0A+3kxerH1dF/81YxEMqLoF1Fek3/hGLdLiye8vuyKY8ySZqEMCtngZbjN0b1ZdrEQIVptD8wgfLSHUviR/Y=
  - secure: jbO0zXy9lYYuXSf5aCcSOGbFYbzwVMva0sUPFS5BVHcnQwiy1BWk4IQ9HOvLgUSam1yY2eN+Qyrb0dAGaAO2Rxp9bhY6ALhhqLaK2NZtH1MBdMrwUDSVULS3R/zGFTCp032vLjuOfwF8Q8/2R+yr59L79xUpEuZeSS6ZxhiiL+1Q/ZlPoAPkuRbQ9ocLLsM6jvxTQWEMZON0kavuKjEbCPM9RY86l6RwhGEt2UicdhNoFC82fz3tP+xTH2r/z6X90CY84ifDgznXuX6HY2JQFmev4nddX1g25fKHRq8mUYva7KlkMb2SDrSuHtC08W92wfbg5cZZHG8JT3k8Yicf9Uj0b9EtDuDb3HVfxslXM7ZxBKaRg4HNWJjvQCj5NtZqn9DHcfXq05jGmDmIO06PiQHCes0nSewHEUI75aBIPut4oHmO8JrTb5RCgbXGIgmP2mUYNNiVrJfeV/dqhrA0RUZTCicN+16roT9l/GW3qowksJuZqOko2/oBt73ObcBUBrf5TYKwbKkAbOdK9BlFTrYwtaac3kE+4Lgb3oWAC6+UI9YuCUXKC02yqNi0f7sL2P8qJiGyMcTRbsbVk9cGqjuxp6BFDDnMZ3LA4zfyEP/1pK/Y/ofjdOT2EZHXOowQi867BN5RWKr8dtlOOTIUP2UK+Q/qPha3rKjUEy4wZ60=
  - secure: b1pobiKXcglYFuJw2nNK2Ydh/mEihJkwgm1bbaeZ2M9TZX3uGmu1ShQN5mS1TEYkxThRAF38qmidduqTC7FqLmYbKpIuoiLS74QJ+ZwqpuilpAshwAYv6SW+MNH/ZSj88n6Yci42ZrLqbQruimzv1wyU0tPSf94c97XQB7Q7GgHuxir/mI5NNpP2J2fv82dXThYaLMZRbIfQEAhtr+07uh44ij1RBkSsnWU0Vz+971+lxYLyV8uryZSZ63CIG6biuGm8iTbiX73eEYtR1vKv5aiRrwxC50Hc9AZ/gS4VoOkn6HHH6m2eatuyEaEaaHelMt50bvLSQZvEbfhAf5TItqCuD2CyH47hkuWFlPg1JPuS6CKVE6cxeQ1EfyMBsClFcDAKnDneCO/LO7+YadXVhuEmm2cBdeOvdvJfoF3OJDIUWKUD1ZvhTa3tFkkL7p6zEpqsuqWzezTOPVaxlKLlOARj2sPk3O66g0gN2NYjAn+fobPTB+GMWaR7jWAtHumk7qc2A+yt1Q8zJ5p9BSoQ31FqfN934Yj0E5zA+jZ94CcQmDyDrdb0EpcUbqC8mV3prqYSYTMK5pBe8LE7NrWJd92TpGREV9xylV/Z8bs4miQyKgI2E8atWYE/eJZh5LpTi/BYTECNRUuWTNpfvJaB2Z7WW0xF9r7FoAytNUmVMdQ=
